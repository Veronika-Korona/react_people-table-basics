{"version":3,"sources":["components/HomePage.tsx","components/PersonRow.tsx","components/PersonTable.tsx","components/PeoplePage.tsx","api/api.ts","components/NotFoundPage.tsx","components/Header.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PersonRow","name","sex","born","died","motherName","fatherName","PeopleTable","people","map","person","PeoplePage","useState","setPeople","hasError","setHasError","useEffect","getPeople","a","fetch","then","response","json","peopleFromServer","NotFoundPage","Header","to","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"gOAAaA,EAAW,kBACtB,oBAAIC,UAAU,gBAAd,wB,8CCCWC,EAA6B,SAAC,GAOpC,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,IACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAEA,OACE,qBAAIP,UAAU,SAAd,UACE,oBAAIA,UAAU,kBAAd,SAAiCE,IACjC,oBAAIF,UAAU,kBAAd,SAAiCG,IACjC,oBAAIH,UAAU,kBAAd,SAAiCI,IACjC,oBAAIJ,UAAU,kBAAd,SAAiCK,IACjC,oBAAIL,UAAU,kBAAd,SAAiCM,GAAc,WAC/C,oBAAIN,UAAU,kBAAd,SAAiCO,GAAc,eCXxCC,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAC1C,qBAAKT,UAAU,UAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAGJ,gCACGS,EAAOC,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAEMA,GADCA,EAAOT,iBClBXU,EAAa,WACxB,MAA4BC,mBAA0B,MAAtD,mBAAOJ,EAAP,KAAeK,EAAf,KACA,EAAgCD,oBAAS,GAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KAiBA,OAfAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,+ECNbC,MAHG,qEAIPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDKT,OAERC,EAFQ,OAIdV,EAAUU,GACVR,GAAY,GALE,gDAOdA,GAAY,GAPE,yDAAH,qDAWfE,MACC,IAGD,gCACE,oBAAIlB,UAAU,gBAAd,yBACCe,GACC,mBAAGf,UAAU,gBAAb,sDAKDS,GAAU,cAAC,EAAD,CAAaA,OAAQA,QEhCzBgB,EAAe,kBAC1B,oBAAIzB,UAAU,gBAAd,6BCEW0B,EAAS,kBACpB,mCACE,wBAAQ1B,UAAU,SAAlB,SACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAAS2B,GAAG,IAAI3B,UAAU,qBAA1B,kBAIA,cAAC,IAAD,CAAS2B,GAAG,UAAU3B,UAAU,qBAAhC,8BCUK4B,EAbH,kBACV,sBAAK5B,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6B,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUH,GAAG,QAC1C,cAAC,IAAD,CAAOE,KAAK,IAAIC,QAAS,cAAC,EAAD,aCZ/BC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.62d4ceb3.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h2 className=\"subtitle is-3\">Home page</h2>\n);\n","type Props = Person;\n\nexport const PersonRow: React.FC<Props> = ({\n  name,\n  sex,\n  born,\n  died,\n  motherName,\n  fatherName,\n}) => {\n  return (\n    <tr className=\"Person\">\n      <td className=\"Person_Row-data\">{name}</td>\n      <td className=\"Person_Row-data\">{sex}</td>\n      <td className=\"Person_Row-data\">{born}</td>\n      <td className=\"Person_Row-data\">{died}</td>\n      <td className=\"Person_Row-data\">{motherName || 'Uknown'}</td>\n      <td className=\"Person_Row-data\">{fatherName || 'Uknown'}</td>\n    </tr>\n  );\n};\n","import { PersonRow } from './PersonRow';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => (\n  <div className=\"content\">\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map((person) => (\n          <PersonRow\n            key={person.name}\n            {...person}\n          />\n        ))}\n      </tbody>\n    </table>\n  </div>\n);\n","import { useState, useEffect } from 'react';\nimport { getPeopleFromServer } from '../api/api';\nimport { PeopleTable } from './PersonTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    const getPeople = async () => {\n      try {\n        const peopleFromServer: Person[] = await getPeopleFromServer();\n\n        setPeople(peopleFromServer);\n        setHasError(false);\n      } catch (error) {\n        setHasError(true);\n      }\n    };\n\n    getPeople();\n  }, []);\n\n  return (\n    <div>\n      <h2 className=\"subtitle is-3\">People Page</h2>\n      {hasError && (\n        <p className=\"error-message\">\n          Some propblems with server. Please wait.\n        </p>\n      )}\n\n      {people && <PeopleTable people={people} />}\n    </div>\n  );\n};\n","const URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeopleFromServer = () => {\n  return fetch(URL)\n    .then(response => response.json());\n};\n","export const NotFoundPage = () => (\n  <h2 className=\"subtitle is-3\">Page not found</h2>\n);\n","import { NavLink } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\n\nexport const Header = () => (\n  <>\n    <header className=\"Header\">\n      <nav className=\"navbar\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className=\"navbar-item is-tab\">\n            Home\n          </NavLink>\n\n          <NavLink to=\"/people\" className=\"navbar-item is-tab\">\n            People\n          </NavLink>\n\n        </div>\n      </nav>\n    </header>\n  </>\n);\n","import 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { Header } from './components/Header';\n\nconst App = () => (\n  <div className=\"App\">\n    <Header />\n\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/people\" element={<PeoplePage />} />\n      <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}